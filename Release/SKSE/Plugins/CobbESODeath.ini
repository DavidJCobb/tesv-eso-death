
;
; A few configuration possibilites:
;
;  - Require soul gem to resurrect on-site; can always resurrect off-site
;     - [ResurrectOffsite]bEnabled=TRUE
;     - [SoulGem]bEnabled=TRUE
;
;  - Require soul gem to resurrect; always resurrect off-site
;     - [ResurrectOffsite]bEnabled=TRUE
;     - [ResurrectOffsite]bPreemptsDeath=FALSE
;     - [SoulGem]bEnabled=TRUE
;     - [SoulGem]bGemPreemptsTravel=FALSE
;
;  - Require soul gem to resurrect; kill player if no gem
;     - [SoulGem]bEnabled=TRUE
;     - [SoulGem]bGemPreemptsTravel=FALSE
;     - [ResurrectOffsite]bEnabled=FALSE
;

[options]
bBountyPay=TRUE           ; Forcibly pay bounties to any guards pursuing you at the time of your death?
bBountyConfiscate=TRUE    ; Confiscate your stolen goods? (Requires bBountyPay=TRUE)
bReduceSkillsOnDeath=TRUE ; Reduce your skills when you die? (Uses the same functionality that jails do.)
iReduceSkillSimulatedBounty=1000   ; Skill reduction is proportional to bounty. How much "bounty" should we pretend you have?
bKillIfHardRequirementsNotMet=TRUE ; If soul gems are enabled and travel either isn't or doesn't prevent death, then you'll die if you have no valid gems

[ResurrectOffsite]
bEnabled=TRUE           ;
bPreemptsDeath=TRUE     ; if soul gem is enabled, this determines whether resurrecting off-site prevents death
bRequireSettlement=TRUE ; if false, the player can resurrect at any map marker

[soulgem]
bEnabled=TRUE               ;
bAllowReusableGems=TRUE     ; whether to allow reusable gems; if they're allowed, they will be preferred
bAlwaysLetPlayerChoose=TRUE ; whether to let the player choose whether to spend a gem or resurrect off-site
bGemPreemptsTravel=TRUE     ; whether a gem can allow you to respawn on-site
iMinimumSoulSize=1          ; minimum required size in a gem; 0, 1, ... = empty, petty, ...; DLL prefers larger souls first